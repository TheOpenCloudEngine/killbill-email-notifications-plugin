<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2014-2017 Groupon, Inc
  ~ Copyright 2014-2017 The Billing Project, LLC
  ~
  ~ The Billing Project licenses this file to you under the Apache License, version 2.0
  ~ (the "License"); you may not use this file except in compliance with the
  ~ License.  You may obtain a copy of the License at:
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.killbill.billing.plugin.notification.uengine.repository.InvoiceExtRepository">
    <select id="selectOrganizationFromAccountId" parameterType="java.lang.String"
            resultType="org.killbill.billing.plugin.notification.uengine.model.Organization">
        SELECT C.* FROM
        (SELECT id,tenant_record_id FROM accounts WHERE id = #{id})A
        LEFT OUTER JOIN

        (SELECT record_id,id FROM tenants)B

        ON B.record_id = A.tenant_record_id

        LEFT OUTER JOIN
        (SELECT * FROM organization)C

        ON C.tenant_id = B.id
    </select>

    <select id="selectByOrgIdAndType" parameterType="map"
            resultType="org.killbill.billing.plugin.notification.uengine.model.Template">
        SELECT * FROM organization_template
        WHERE organization_id = #{organization_id}
        AND notification_type = #{notification_type}
    </select>

    <select id="selectConfigByOrgId" parameterType="java.lang.String"
            resultType="org.killbill.billing.plugin.notification.uengine.model.NotificationConfig">
        SELECT * FROM notification_config
        WHERE organization_id = #{organization_id}
    </select>

    <select id="selectVersionByProductId" parameterType="java.lang.String"
            resultType="org.killbill.billing.plugin.notification.uengine.model.ProductDaoVersion">
        SELECT * FROM product_version
        WHERE product_id = #{product_id}
        ORDER BY version
    </select>

    <select id="selectProductById" parameterType="java.lang.String"
            resultType="org.killbill.billing.plugin.notification.uengine.model.ProductDao">
        SELECT * FROM product
        WHERE id = #{id}
    </select>

    <select id="selectProductVersionByVersion" parameterType="map"
            resultType="org.killbill.billing.plugin.notification.uengine.model.ProductDaoVersion">
        SELECT * FROM product_version
        WHERE product_id = #{product_id}
        AND version = #{version}
    </select>

    <select id="selectHistoryByItemId" parameterType="java.lang.String"
            resultType="org.killbill.billing.plugin.notification.uengine.model.ProductDistributionHistory">
        SELECT * FROM product_distribution_history
        WHERE invoice_item_id = #{invoice_item_id}
    </select>

    <insert id="insertHistory"
            parameterType="org.killbill.billing.plugin.notification.uengine.model.ProductDistributionHistory"
            useGeneratedKeys="true" keyProperty="record_id" keyColumn="record_id">
        INSERT INTO product_distribution_history (
            subscription_id,
            tenant_id,
            organization_id,
            buyer_id,
            vendor_id,
            product_id,
            version,
            plan_name,
            usage_name,
            ratio,
            amount,
            original_amount,
            currency,
            invoice_id,
            invoice_item_id,
            linked_invoice_item_id,
            invoice_item_type,
            price_type,
            transaction_type,
            format_date,
            created_date,
            notes
        )
        VALUES (
            #{subscription_id},
            #{tenant_id},
            #{organization_id},
            #{buyer_id},
            #{vendor_id},
            #{product_id},
            #{version},
            #{plan_name},
            #{usage_name},
            #{ratio},
            #{amount},
            #{original_amount},
            #{currency},
            #{invoice_id},
            #{invoice_item_id},
            #{linked_invoice_item_id},
            #{invoice_item_type},
            #{price_type},
            #{transaction_type},
            #{format_date},
            #{created_date},
            #{notes}
        )
    </insert>

    <select id="selectBundlePendingBuys" parameterType="java.lang.String" resultType="org.killbill.billing.plugin.notification.uengine.model.OneTimeBuy">
        SELECT * FROM killbill.onetimebuy
        WHERE billing_date <![CDATA[ <= ]]> #{billing_date}
        AND bundle_id = #{bundle_id}
        AND state = 'PENDING_INVOICE'
    </select>

    <select id="selectOneTimeBuyByItemId" parameterType="java.lang.String" resultType="org.killbill.billing.plugin.notification.uengine.model.OneTimeBuy">
        SELECT * FROM killbill.onetimebuy
        WHERE invoice_item_id = #{invoice_item_id}
        AND state = 'INVOICED'
    </select>

    <update id="updateOneTimeBuy" parameterType="org.killbill.billing.plugin.notification.uengine.model.OneTimeBuy">
        UPDATE onetimebuy
        SET
        bundle_id = #{bundle_id},
        state = #{state},
        account_id = #{account_id},
        product_id = #{product_id},
        version = #{version},
        plan_name = #{plan_name},
        plan_display_name = #{plan_display_name},
        amount = #{amount},
        currency = #{currency},
        invoice_id = #{invoice_id},
        invoice_item_id = #{invoice_item_id},
        effective_date = #{effective_date},
        billing_date = #{billing_date},
        created_date = #{created_date}
        WHERE record_id = #{record_id}
    </update>
</mapper>